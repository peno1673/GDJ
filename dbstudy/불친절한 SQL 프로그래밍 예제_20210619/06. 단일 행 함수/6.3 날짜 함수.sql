--
ALTER SESSION SET NLS_DATE_FORMAT         = "YYYY-MM-DD HH24:MI:SS";
ALTER SESSION SET NLS_TIMESTAMP_FORMAT    = "YYYY-MM-DD HH24:MI:SS.FF";
ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD HH24:MI:SS.FF TZH:TZM";

--
SELECT SYSDATE AS c1 FROM DUAL;

--
SELECT SYSTIMESTAMP AS c1 FROM DUAL;

--
SELECT NEXT_DAY (DATE '2050-01-01', '¿ù') AS c1 FROM DUAL;

--
ALTER SESSION SET NLS_LANGUAGE = ENGLISH;

--
SELECT NEXT_DAY (DATE '2050-01-01', '¿ù') AS c1 FROM DUAL;

--
ALTER SESSION SET NLS_LANGUAGE = KOREAN;

--
SELECT NEXT_DAY (DATE '2050-01-01', 2) AS c1 FROM DUAL;

--
SELECT LAST_DAY (DATE '2050-02-15') AS c1 FROM DUAL;

--
SELECT ADD_MONTHS (DATE '2050-01-15', -1) AS c1
     , ADD_MONTHS (DATE '2050-01-31',  1) AS c2
     , ADD_MONTHS (DATE '2050-02-28',  1) AS c3
  FROM DUAL;

--
CREATE OR REPLACE FUNCTION fnc_add_months (i_date IN DATE, i_integer IN NUMBER)
    RETURN DATE
IS
    l_date DATE := ADD_MONTHS (i_date, i_integer);
BEGIN
    RETURN CASE
               WHEN TO_CHAR (i_date, 'DD') < TO_CHAR (l_date, 'DD')
               THEN i_date + NUMTOYMINTERVAL (i_integer, 'MONTH')
               ELSE l_date
           END;
END fnc_add_months;
/

--
SELECT fnc_add_months (DATE '2050-01-15', -1) AS c1
     , fnc_add_months (DATE '2050-01-31',  1) AS c2
     , fnc_add_months (DATE '2050-02-28',  1) AS c3
  FROM DUAL;

--
SELECT MONTHS_BETWEEN (DATE '2050-04-15', DATE '2050-01-15') AS c1
     , MONTHS_BETWEEN (DATE '2050-04-30', DATE '2050-01-31') AS c2
     , MONTHS_BETWEEN (DATE '2050-04-30', DATE '2050-01-15') AS c3
     , MONTHS_BETWEEN (DATE '2050-01-15', DATE '2050-04-30') AS c4
  FROM DUAL;

--
SELECT ename, TRUNC (MONTHS_BETWEEN (DATE '2000-01-01', hiredate) / 12) AS c1 FROM emp;

--
WITH w1 AS (SELECT TIMESTAMP '2050-01-02 12:34:56.789' AS dt FROM DUAL)
SELECT EXTRACT (YEAR   FROM dt) AS c1, EXTRACT (MONTH  FROM dt) AS c2
     , EXTRACT (DAY    FROM dt) AS c3, EXTRACT (HOUR   FROM dt) AS c4
     , EXTRACT (MINUTE FROM dt) AS c5, EXTRACT (SECOND FROM dt) AS c6
  FROM w1;

--
WITH w1 AS (SELECT TO_DATE ('2051-08-16 12:31:31', 'YYYY-MM-DD HH24:MI:SS') AS dt FROM DUAL)
SELECT ROUND (dt) AS c1, ROUND (dt, 'DD') AS c2 FROM w1;

--
WITH w1 AS (SELECT DATE '2050-07-07' AS dt FROM DUAL)
SELECT ROUND (dt, 'D') AS c1, ROUND (dt, 'WW') AS c2, ROUND (dt, 'W') AS c3 FROM w1;

--
WITH w1 AS (SELECT DATE '2050-07-07' AS dt FROM DUAL)
SELECT ROUND (dt, 'YY') AS c1, ROUND (dt, 'IY') AS c2
     , ROUND (dt, 'WW') AS c3, ROUND (dt, 'IW') AS c4
  FROM w1;

--
WITH w1 AS (SELECT TO_DATE ('2051-08-16 12:31:31', 'YYYY-MM-DD HH24:MI:SS') AS dt FROM DUAL)
SELECT TRUNC (dt) AS c1, TRUNC (dt, 'DD') AS c2 FROM w1;

--
WITH w1 AS (SELECT DATE '2050-07-07' AS dt FROM DUAL)
SELECT TRUNC (dt, 'D') AS c1, TRUNC (dt, 'WW') AS c2, TRUNC (dt, 'W') AS c3 FROM w1;

--
WITH w1 AS (SELECT DATE '2050-07-07' AS dt FROM DUAL)
SELECT TRUNC (dt, 'YY') AS c1, TRUNC (dt, 'IY') AS c2
     , TRUNC (dt, 'WW') AS c3, TRUNC (dt, 'IW') AS c4
  FROM w1;

--
WITH w1 AS (SELECT TIMESTAMP '2050-01-01 23:59:59.123456789' AS dt FROM DUAL)
SELECT NEXT_DAY (dt, 2) AS c1
     , CAST (NEXT_DAY (dt, 2) AS TIMESTAMP)
     + NUMTODSINTERVAL (TO_CHAR (dt, 'FF9') * 1E-9, 'SECOND') AS c2
  FROM w1;
