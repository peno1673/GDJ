--
DROP TABLE t1 PURGE;
CREATE TABLE t1 (c1 NUMBER NOT NULL, c2 NUMBER, CONSTRAINT t1_pk PRIMARY KEY (c1));

--
DROP SEQUENCE s1;

CREATE SEQUENCE s1;

--
SELECT s1.CURRVAL AS c1 FROM DUAL;

--
SELECT s1.NEXTVAL AS c1 FROM DUAL;

--
SELECT s1.CURRVAL AS c1 FROM DUAL;

--
INSERT INTO t1 VALUES (s1.NEXTVAL, 1);
INSERT INTO t1 VALUES (s1.NEXTVAL, 2);
COMMIT;

--
SELECT * FROM t1;

--
SELECT min_value, max_value, increment_by, cache_size, last_number
  FROM user_sequences
 WHERE sequence_name = 'S1';

--
SELECT s1.NEXTVAL AS c1 FROM DUAL;

ALTER SEQUENCE s1 INCREMENT BY 96;

SELECT s1.NEXTVAL AS c1 FROM DUAL;

ALTER SEQUENCE s1 INCREMENT BY 1;

SELECT s1.NEXTVAL AS c1 FROM DUAL;

--
SELECT s1.NEXTVAL AS c1 FROM DUAL;

ALTER SEQUENCE s1 INCREMENT BY -101 MINVALUE 0;

SELECT s1.NEXTVAL AS c1 FROM DUAL;

ALTER SEQUENCE s1 INCREMENT BY 1;

--
DROP SEQUENCE s1;

--
DROP SEQUENCE s1;
CREATE SEQUENCE s1;

-- S1
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S2
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S1
SELECT s1.CURRVAL AS c1 FROM DUAL;

-- S2
SELECT s1.CURRVAL AS c1 FROM DUAL;

-- S1
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S2
SELECT s1.CURRVAL AS c1 FROM DUAL;

--
DROP SEQUENCE s1;
CREATE SEQUENCE s1 SESSION;

-- S1
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S2
SELECT s1.NEXTVAL AS c1 FROM DUAL

-- S1
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S2
SELECT s1.NEXTVAL AS c1 FROM DUAL;

-- S1: 세션을 종료한 후 다시 접속
SELECT s1.NEXTVAL AS c1 FROM DUAL;

--
DROP SEQUENCE s1;
DROP SEQUENCE s2;

CREATE SEQUENCE s1;
CREATE SEQUENCE s2;

DROP TABLE t1 PURGE;

CREATE TABLE t1 (
    c1 NUMBER
  , c2 NUMBER DEFAULT scott.s1.NEXTVAL
  , c3 NUMBER DEFAULT ON NULL scott.s2.NEXTVAL);

--
INSERT INTO t1 (c1) VALUES (1);
INSERT INTO t1 VALUES (2, 9, 9);
INSERT INTO t1 VALUES (3, NULL, NULL);
INSERT INTO t1 VALUES (4, DEFAULT, DEFAULT);
COMMIT;

--
SELECT * FROM t1;

--
DROP SEQUENCE s1;
DROP SEQUENCE s2;

CREATE SEQUENCE s1;
CREATE SEQUENCE s2;

DROP TABLE t1 PURGE;
DROP TABLE t2 PURGE;

CREATE TABLE t1 (
    c1 NUMBER DEFAULT scott.s1.NEXTVAL NOT NULL
  , c2 NUMBER
);

CREATE TABLE t2 (
    c1 NUMBER DEFAULT scott.s1.CURRVAL NOT NULL
  , c2 NUMBER DEFAULT scott.s2.NEXTVAL NOT NULL
  , c3 NUMBER
);

ALTER TABLE t1 ADD CONSTRAINT t1_pk PRIMARY KEY (c1);
ALTER TABLE t2 ADD CONSTRAINT t2_pk PRIMARY KEY (c1, c2);
ALTER TABLE t2 ADD CONSTRAINT t2_f1 FOREIGN KEY (c1) REFERENCES t1 (c1);

--
INSERT INTO t1 (c2) VALUES (1);
INSERT INTO t2 (c3) VALUES (2);
INSERT INTO t2 (c3) VALUES (3);
INSERT INTO t1 (c2) VALUES (4);
INSERT INTO t2 (c3) VALUES (5);
INSERT INTO t2 (c3) VALUES (6);
COMMIT;

--
SELECT * FROM t1;

SELECT * FROM t2;

--
DROP TABLE t1 PURGE;
CREATE TABLE t1 (c1 NUMBER, c2 NUMBER GENERATED ALWAYS AS IDENTITY);

--
INSERT INTO t1 (c1) VALUES (1);
INSERT INTO t1 VALUES (2, 9);

INSERT INTO t1 VALUES (3, NULL);

INSERT INTO t1 VALUES (4, DEFAULT);

--
SELECT * FROM t1;

--
SELECT * FROM user_tab_identity_cols WHERE table_name = 'T1';

--
SELECT nullable, data_default, identity_column
  FROM user_tab_columns
 WHERE table_name = 'T1'
   AND column_name = 'C2';

--
SELECT min_value, max_value, increment_by, cache_size, last_number
  FROM user_sequences
 WHERE sequence_name = 'ISEQ$$_######';

--
ALTER TABLE t1 MODIFY c2 GENERATED ALWAYS AS IDENTITY (START WITH LIMIT VALUE);

--
ALTER TABLE t1 MODIFY c2 DROP IDENTITY;

--
DROP TABLE t1 PURGE;
DROP TABLE t2 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER);
CREATE TABLE t2 (c1 NUMBER, c2 NUMBER);

DROP SEQUENCE s1;
CREATE SEQUENCE s1;

--
INSERT ALL
  INTO t1
  INTO t2
SELECT 1, s1.NEXTVAL FROM DUAL CONNECT BY LEVEL <= 2;

--
INSERT ALL
  INTO t1 VALUES (1, s1.NEXTVAL)
  INTO t2 VALUES (1, s1.NEXTVAL)
SELECT * FROM DUAL CONNECT BY LEVEL <= 2;

INSERT ALL
  INTO t1 VALUES (2, s1.NEXTVAL)
  INTO t2 VALUES (2, s1.CURRVAL)
SELECT * FROM DUAL CONNECT BY LEVEL <= 2;

INSERT ALL
  INTO t1 VALUES (3, s1.CURRVAL)
  INTO t2 VALUES (3, s1.NEXTVAL)
SELECT * FROM DUAL CONNECT BY LEVEL <= 2;

INSERT ALL
  INTO t1 VALUES (4, s1.CURRVAL)
  INTO t2 VALUES (4, s1.CURRVAL)
SELECT * FROM DUAL CONNECT BY LEVEL <= 2;

COMMIT;

--
SELECT * FROM t1;

SELECT * FROM t2;

--
CREATE OR REPLACE FUNCTION f1 RETURN NUMBER
IS
BEGIN
    RETURN s1.NEXTVAL;
END f1;
/

--
TRUNCATE TABLE t1;
TRUNCATE TABLE t2;

--
INSERT ALL
  INTO t1
  INTO t2
SELECT 5, f1 FROM DUAL CONNECT BY LEVEL <= 2;

--
SELECT * FROM t1;

SELECT * FROM t2;
