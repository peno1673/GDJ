--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE)
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
);

--
INSERT INTO t1 VALUES (1, DATE '2050-01-01');
INSERT INTO t1 VALUES (2, DATE '2050-02-01');
INSERT INTO t1 VALUES (3, DATE '2050-03-01');

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE)
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

--
INSERT INTO t1 VALUES (1, DATE '2050-01-01');
INSERT INTO t1 VALUES (2, DATE '2050-02-01');
INSERT INTO t1 VALUES (3, DATE '2050-03-01');
COMMIT;

--
SELECT * FROM t1;

--
SELECT partitioning_type, partition_count, partitioning_key_count
  FROM user_part_tables
 WHERE table_name = 'T1';

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1' ORDER BY 1;

--
SELECT object_type, column_name, column_position FROM user_part_key_columns WHERE NAME = 'T1';

--
SELECT object_name, subobject_name, object_type FROM user_objects WHERE object_name = 'T1';

--
SELECT segment_name, partition_name, segment_type, tablespace_name
  FROM user_segments
 WHERE segment_name = 'T1';

--
SELECT * FROM t1 PARTITION (p1);

--
SELECT * FROM t1 PARTITION FOR (DATE '2050-02-10');

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY RANGE (c1, c2) (
    PARTITION p1 VALUES LESS THAN (1, 1)
  , PARTITION p2 VALUES LESS THAN (1, 2)
  , PARTITION p3 VALUES LESS THAN (2, 1)
  , PARTITION p4 VALUES LESS THAN (2, 2)
  , PARTITION p5 VALUES LESS THAN (MAXVALUE, MAXVALUE)
);

--
INSERT INTO t1 VALUES (0, 0);
INSERT INTO t1 VALUES (0, 1);
INSERT INTO t1 VALUES (0, 2);
INSERT INTO t1 VALUES (1, 0);
INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (1, 2);
INSERT INTO t1 VALUES (2, 0);
INSERT INTO t1 VALUES (2, 1);
INSERT INTO t1 VALUES (2, 2);
INSERT INTO t1 VALUES (3, 0);
INSERT INTO t1 VALUES (3, 1);
INSERT INTO t1 VALUES (3, 2);
COMMIT;

--
SELECT a.*, TBL$OR$IDX$PART$NUM (SCOTT.T1, 0, 1, 0, ROWID) AS pn FROM t1 a ORDER BY 1, 2;

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY RANGE (c1, c2) (
    PARTITION p1 VALUES LESS THAN (1, 1)
  , PARTITION p2 VALUES LESS THAN (1, MAXVALUE)
  , PARTITION p3 VALUES LESS THAN (2, 1)
  , PARTITION p4 VALUES LESS THAN (2, MAXVALUE)
  , PARTITION p5 VALUES LESS THAN (MAXVALUE, MAXVALUE)
);

--
DROP TABLE t1 PURGE;
CREATE TABLE t1 (c1 NUMBER, c2 NUMBER) PARTITION BY HASH (c1) PARTITIONS 3;

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY HASH (c1) (PARTITION p1, PARTITION p2, PARTITION p3);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY LIST (c2) (
    PARTITION p1 VALUES (1, 2)
  , PARTITION p2 VALUES (3, 4)
  , PARTITION p3 VALUES (DEFAULT)
);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY LIST (c1, c2) (
    PARTITION p1 VALUES ((1, 1), (1, 2))
  , PARTITION p2 VALUES ((2, 1), (2, 2))
  , PARTITION p3 VALUES (DEFAULT)
);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY LIST (c2) AUTOMATIC (PARTITION p1 VALUES (1), PARTITION p2 VALUES (2));

--
INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (2, 2);
INSERT INTO t1 VALUES (3, 3);
COMMIT;

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER)
PARTITION BY SYSTEM (PARTITION p1, PARTITION p2, PARTITION p3);

--
INSERT INTO t1 VALUES (1);

--
INSERT INTO t1 PARTITION (p1) VALUES (1);

--
SELECT * FROM t1;

SELECT * FROM t1 PARTITION (p1);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER) PARTITION BY SYSTEM PARTITIONS 3;

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE)
PARTITION BY RANGE (c2) INTERVAL (NUMTOYMINTERVAL (1, 'MONTH')) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01'));

--
SELECT   partition_name, high_value
    FROM user_tab_partitions
   WHERE table_name = 'T1'
ORDER BY partition_position;

--
INSERT INTO t1 VALUES (1, DATE '2050-01-01');
INSERT INTO t1 VALUES (3, DATE '2050-03-01');
INSERT INTO t1 VALUES (2, DATE '2050-02-01');
COMMIT;

--
SELECT   partition_name, high_value
    FROM user_tab_partitions
   WHERE table_name = 'T1'
ORDER BY partition_position;

--
DROP TABLE t2 CASCADE CONSTRAINTS PURGE;
DROP TABLE t1 CASCADE CONSTRAINTS PURGE;

CREATE TABLE t1 (c1 NUMBER NOT NULL, c2 DATE, CONSTRAINT t1_pk PRIMARY KEY (c1))
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE t2 (
    c1 NUMBER NOT NULL, c2 NUMBER NOT NULL, c3 NUMBER
  , CONSTRAINT t2_pk PRIMARY KEY (c1, c2)
  , CONSTRAINT t2_f1 FOREIGN KEY (c1) REFERENCES t1 (c1)
)
PARTITION BY REFERENCE (t2_f1);

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T2';

--
INSERT INTO t1 VALUES (1, DATE '2050-01-01');
INSERT INTO t1 VALUES (2, DATE '2050-02-01');
INSERT INTO t1 VALUES (3, DATE '2050-02-02');
INSERT INTO t2 VALUES (1, 1, 1);
INSERT INTO t2 VALUES (2, 2, 2);
INSERT INTO t2 VALUES (3, 3, 3);
COMMIT;

--
SELECT * FROM t1 PARTITION (p2);

--
SELECT * FROM t2 PARTITION (p2);

--
SELECT * FROM t2 PARTITION FOR (DATE '2050-02-01');

--
DROP TABLE t2 CASCADE CONSTRAINTS PURGE;
DROP TABLE t1 CASCADE CONSTRAINTS PURGE;

CREATE TABLE t1 (c1 NUMBER NOT NULL, c2 DATE, CONSTRAINT t1_pk PRIMARY KEY (c1))
PARTITION BY RANGE (c2) INTERVAL (NUMTOYMINTERVAL (1, 'MONTH')) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01'));

CREATE TABLE t2 (c1 NUMBER NOT NULL, c2 NUMBER NOT NULL, c3 NUMBER
               , CONSTRAINT t2_pk PRIMARY KEY (c1, c2)
               , CONSTRAINT t2_f1 FOREIGN KEY (c1) REFERENCES t1 (c1))
PARTITION BY REFERENCE (t2_f1);

--
DROP TABLE t2 CASCADE CONSTRAINTS PURGE;
DROP TABLE t1 CASCADE CONSTRAINTS PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE, c3 NUMBER)
PARTITION BY RANGE (c2) SUBPARTITION BY HASH (c3) SUBPARTITIONS 2 (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

--
SELECT partitioning_type, subpartitioning_type, partition_count, def_subpartition_count
  FROM user_part_tables
 WHERE table_name = 'T1';

--
SELECT   composite, partition_name, subpartition_count, partition_position
    FROM user_tab_partitions
   WHERE table_name = 'T1'
ORDER BY partition_position;

--
SELECT   partition_name, subpartition_name, partition_position, subpartition_position
    FROM user_tab_subpartitions
   WHERE table_name = 'T1'
ORDER BY partition_position, subpartition_position;

--
SELECT column_name, column_position FROM dba_subpart_key_columns WHERE name = 'T1';

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE, c3 NUMBER)
PARTITION BY RANGE (c2) SUBPARTITION BY LIST (c3) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01') (
        SUBPARTITION p1_s1 VALUES (1, 2), SUBPARTITION p1_s2 VALUES (DEFAULT))
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01') (
        SUBPARTITION p2_s1 VALUES (1, 2), SUBPARTITION p2_s2 VALUES (DEFAULT))
  , PARTITION p3 VALUES LESS THAN (MAXVALUE) (
        SUBPARTITION p3_s1 VALUES (1, 2), SUBPARTITION p3_s3 VALUES (DEFAULT))
);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE, c3 NUMBER)
PARTITION BY RANGE (c2) SUBPARTITION BY LIST (c3)
    SUBPARTITION TEMPLATE (SUBPARTITION s1 VALUES (1, 2), SUBPARTITION s2 VALUES (DEFAULT)) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

--
SELECT partition_name, subpartition_name FROM user_tab_subpartitions WHERE table_name = 'T1';

--
INSERT INTO t1 VALUES (1, DATE '2050-01-01', 1);
INSERT INTO t1 VALUES (2, DATE '2050-01-01', 3);
COMMIT;

--
SELECT * FROM t1 SUBPARTITION (p1_s1);

--
SELECT * FROM t1 SUBPARTITION FOR (DATE '2050-01-10', 2);

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 DATE, c3 NUMBER, CONSTRAINT t1_pk PRIMARY KEY (c1, c2))
ORGANIZATION INDEX
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (DATE '2050-02-01')
  , PARTITION p2 VALUES LESS THAN (DATE '2050-03-01')
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

--
DROP CLUSTER c1# INCLUDING TABLES;
DROP TABLE t1 PURGE;

CREATE CLUSTER c1# (c1 NUMBER, c2 NUMBER) HASHKEYS 100 HASH IS c1
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (100)
  , PARTITION p2 VALUES LESS THAN (200)
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER, c3 NUMBER) CLUSTER c1# (c1, c2);

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER, c3 NUMBER)
PARTITION BY RANGE (c1) SUBPARTITION BY HASH (c2) SUBPARTITIONS 2 (
    PARTITION p1 VALUES LESS THAN (1)
  , PARTITION p2 VALUES LESS THAN (2)
  , PARTITION p3 VALUES LESS THAN (3)
  , PARTITION p4 VALUES LESS THAN (MAXVALUE)
);

INSERT INTO t1 VALUES (1, 1, 1);
INSERT INTO t1 VALUES (2, 2, 2);
INSERT INTO t1 VALUES (3, 3, 3);
INSERT INTO t1 VALUES (4, 4, 4);
COMMIT;

--
CREATE UNIQUE INDEX t1_u1 ON t1 (c1);
CREATE UNIQUE INDEX t1_u2 ON t1 (c1, c2) LOCAL;
CREATE UNIQUE INDEX t1_u3 ON t1 (c2) LOCAL;

--
CREATE INDEX t1_x1 ON t1 (c2, c3) LOCAL;
CREATE INDEX t1_x2 ON t1 (c3) LOCAL;
CREATE INDEX t1_x3 ON t1 (c3, c2) GLOBAL PARTITION BY HASH (c3) PARTITIONS 2;
CREATE INDEX t1_x4 ON t1 (c1, c3) GLOBAL PARTITION BY HASH (c3) PARTITIONS 2;

--
SELECT   index_name, uniqueness, partitioned, status
    FROM user_indexes
   WHERE table_name = 'T1'
ORDER BY 1;

--
SELECT   index_name, partitioning_type, subpartitioning_type, locality, alignment
    FROM user_part_indexes
   WHERE table_name = 'T1'
ORDER BY 1;

--
SELECT   index_name, composite, partition_name, partition_position, status
    FROM user_ind_partitions
   WHERE index_name IN ('T1_U2', 'T1_X3')
ORDER BY 1, 4;

--
SELECT   partition_name, subpartition_name, partition_position, subpartition_position, status
    FROM user_ind_subpartitions
   WHERE index_name = 'T1_U2'
ORDER BY 3, 4;

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (2)
  , PARTITION p2 VALUES LESS THAN (3)
);

CREATE INDEX t1_x1 ON t1 (c1);
CREATE INDEX t1_x2 ON t1 (c2) LOCAL;

INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (2, 2);
COMMIT;

--
ALTER TABLE t1 ADD PARTITION p4 VALUES LESS THAN (MAXVALUE);

INSERT INTO t1 VALUES (3, 1);
COMMIT;

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
ALTER TABLE t1 ADD PARTITION p3 VALUES LESS THAN (4);

--
ALTER TABLE t1 DROP PARTITION p4;

--
ALTER TABLE t1 DROP PARTITION FOR (5);

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
ALTER TABLE t1 ADD PARTITION p3 VALUES LESS THAN (5);

INSERT INTO t1 VALUES (3, 3);
INSERT INTO t1 VALUES (4, 4);
COMMIT;

--
ALTER TABLE t1 MERGE PARTITIONS p2, p3 INTO PARTITION p3;

--
ALTER TABLE t1 MERGE PARTITIONS p2 TO p3 INTO PARTITION p3;

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
ALTER TABLE t1 SPLIT PARTITION p3 AT (3) INTO (PARTITION p2, PARTITION p3);

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
ALTER TABLE t1 SPLIT PARTITION p3 INTO (PARTITION p3 VALUES LESS THAN (4), PARTITION p4);

--
SELECT partition_name, high_value FROM user_tab_partitions WHERE table_name = 'T1';

--
DROP TABLE t2 PURGE;
CREATE TABLE t2 AS SELECT * FROM t1 WHERE 0 = 1;
CREATE INDEX t2_x1 ON t2 (c2);

INSERT INTO t2 VALUES (5, 1);
INSERT INTO t2 VALUES (6, 2);
COMMIT;

--
ALTER TABLE t1 EXCHANGE PARTITION p1 WITH TABLE t2 INCLUDING INDEXES WITHOUT VALIDATION;

--
SELECT * FROM t1 PARTITION (p1);

--
ALTER TABLE t1 MOVE PARTITION p1 INCLUDING ROWS WHERE c2 < 2;

--
SELECT * FROM t1 PARTITION (p1);

--
ALTER TABLE t1 RENAME PARTITION p4 TO p5;

--
ALTER INDEX t1_x2 RENAME PARTITION p4 TO p5;

--
ALTER TABLE t1 TRUNCATE PARTITION p5;

--
ALTER TABLE t1 MODIFY PARTITION p1 READ ONLY;

--
INSERT INTO t1 VALUES (1, 3);

--
SELECT status FROM user_indexes WHERE index_name = 'T1_X1';

--
SELECT partition_name, status FROM user_ind_partitions WHERE index_name = 'T1_X2';

--
ALTER INDEX t1_x1 REBUILD;
ALTER INDEX t1_x2 REBUILD PARTITION p1;
ALTER INDEX t1_x2 REBUILD PARTITION p2;
ALTER INDEX t1_x2 REBUILD PARTITION p3;

--
ALTER TABLE t1 TRUNCATE PARTITION p1 UPDATE GLOBAL INDEXES;

--
SELECT status, orphaned_entries FROM user_indexes WHERE index_name = 'T1_X1';

--
EXEC DBMS_SCHEDULER.RUN_JOB ('PMO_DEFERRED_GIDX_MAINT_JOB')

--
EXEC DBMS_PART.CLEANUP_GIDX ('SCOTT', 'T1')

--
SELECT status, orphaned_entries FROM user_indexes WHERE index_name = 'T1_X1';

--
ALTER INDEX t1_x1 REBUILD;
ALTER INDEX t1_x1 COALESCE CLEANUP;

--
DROP TABLE t1 PURGE;

CREATE TABLE t1 (c1 NUMBER, c2 NUMBER)
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (2)        INDEXING ON
  , PARTITION p2 VALUES LESS THAN (MAXVALUE) INDEXING OFF
);

INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (2, 2);
COMMIT;

--
CREATE INDEX t1_x1 ON t1 (c1) GLOBAL INDEXING FULL;
CREATE INDEX t1_x2 ON t1 (c2) GLOBAL INDEXING PARTIAL;
CREATE INDEX t1_x3 ON t1 (c1, c2) LOCAL INDEXING FULL;
CREATE INDEX t1_x4 ON t1 (c2, c1) LOCAL INDEXING PARTIAL;

--
SELECT index_name, partitioned, indexing, status FROM user_indexes WHERE table_name = 'T1';

--
SELECT index_name, partition_name, status
  FROM user_ind_partitions
 WHERE index_name IN ('T1_X3', 'T1_X4');

--
DROP TABLE t1 PURGE;
CREATE TABLE t1 (c1 NUMBER, c2 NUMBER);
CREATE INDEX t1_x1 ON t1 (c1);
CREATE INDEX t1_x2 ON t1 (c2);

INSERT INTO t1 VALUES (1, 1);
INSERT INTO t1 VALUES (2, 2);
INSERT INTO t1 VALUES (3, 2);
COMMIT;

--
ALTER TABLE t1 MODIFY
PARTITION BY RANGE (c2) (
    PARTITION p1 VALUES LESS THAN (2)
  , PARTITION p2 VALUES LESS THAN (3)
  , PARTITION p3 VALUES LESS THAN (MAXVALUE)
)
ONLINE UPDATE INDEXES (t1_x1 GLOBAL, t1_x2 LOCAL);
